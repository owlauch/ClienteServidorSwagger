---
swagger: "2.0"
info:
  description: "Facilitar a integração social de pessoas através de exercícios fí\
    sicos feitos coletivamente.
    Toda data no sistema é no formato date-time"
  version: "1.0.0"
  title: "Honoo"
  termsOfService: "http://honoo.io/terms/"
  contact:
    email: "honoo@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
- name: "user"
  description: "Operacões com os usuarios"
- name: "event"
  description: "Operações com os Eventos"
- name: "participant"
  description: "Tudo Sobre os usuarios participantes dos Eventos"
- name: "mensagem"
  description: "Mensagens dos usuarios nos Eventos"
schemes:
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Cadastrar um novo usuario"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Campos obrigatórios: username, email e password"
        required: true
        schema:
            type: object
            properties:
              username:
                type: "string"
              email:
                type: "string"
              password:
                type: "string"
              birthdate:
                type: "string"
                format: "date-time"
              sex:
                type: "string"
                example: "M | F"
      responses:
        200:
          description: "Sucesso"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Erro"
      x-swagger-router-controller: "User"
    put:
      tags:
      - "user"
      summary: "Atualizar um usuario"
      description: ""
      operationId: "updateUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Sucesso"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Erro"
      x-swagger-router-controller: "User"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Enconte um usuario pelo seu ID"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id do usuario que quer retorno"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
          schema:
              type: object
              properties:
                id:
                  type: "integer"
                  format: "int64"
                username:
                  type: "string"
                email:
                  type: "string"
                birthdate:
                  type: "string"
                  format: "date-time"
                sex:
                  type: "string"
                  example: "M | F"
        400:
          description: "Erro"
      x-swagger-router-controller: "User"
    delete:
      tags:
      - "user"
      summary: "Deletar Usuario"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "userId"
        in: "path"
        description: "Id do Usuario que deseja deletar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
        400:
          description: "Erro"
      x-swagger-router-controller: "User"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logar usuario dentro do Sistema"
      description: ""
      operationId: "loginUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Necessário um objeto User"
        required: true
        schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: "Sucesso"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
          schema:
            type: object
            properties:
              token:
                type: string
        400:
          description: "Erro"
      x-swagger-router-controller: "User"
  /event:
    get:
      tags:
      - "event"
      summary: "Listar todos os Eventos"
      description: ""
      operationId: "getEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        400:
          description: "Erro"
      x-swagger-router-controller: "Event"
    post:
      tags:
      - "event"
      summary: "Adicione um novo Evento"
      description: ""
      operationId: "addEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Necessário um objeto Evento"
        required: true
        schema:
          type: object
          properties:
            startDate:
              type: string
              format: 'date-time'
            endDate:
              type: string
              format: 'date-time'
            title:
              type: string
            street:
              type: string
            neighborhood:
              type: string
            city:
              type: string
            referencePoint:
              type: string
            description:
              type: string
            eventTypeId:
              type: "integer"
              format: "int64"
            ownerId:
              type: "integer"
              format: "int64"
            status:
              type: boolean
      responses:
        200:
          description: "Sucesso"
        400:
          description: "Erro"
      x-swagger-router-controller: "Event"
    put:
      tags:
      - "event"
      summary: "Atualizar um Evento"
      description: ""
      operationId: "updateEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
            type: object
            properties:
              id:
                type: "integer"
                format: "int64"
              title:
                type: string
              startDate:
                type: string
                format: date-time
              endDate:
                type: string
                format: date-time
              street:
                type: string
              neighborhood:
                type: string
              city:
                type: string
              referencePoint:
                type: string
              description:
                type: string
              eventTypeId:
                type: "integer"
                format: "int64"
              status:
                type: boolean
              
      responses:
        200:
          description: "Sucesso"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Erro"
      x-swagger-router-controller: "Event"
  /event/{eventId}:
    get:
      tags:
      - "event"
      summary: "Enconte um Evento pelo seu ID"
      description: "Retorna apenas o tipo de evento do mesmo id enviado"
      operationId: "getEventById"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "Id do Evento que quer retorno"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Erro"
      x-swagger-router-controller: "Event"
    delete:
      tags:
      - "event"
      summary: "Deletar Algum Evento"
      description: ""
      operationId: "deleteEvent"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "eventId"
        in: "path"
        description: "Id do Evento que deseja deletar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
        400:
          description: "Erro"
      x-swagger-router-controller: "Event"
  /event/search:
    get:
      tags:
      - "event"
      operationId: "eventSearchGET"
      parameters:
      - name: "start_date"
        in: "query"
        description: "A data inicial do relatório. Deve ser usado junto com `end_date`.\n"
        required: false
        type: "string"
        format: "date-time"
      - name: "end_date"
        in: "query"
        description: "A data final do relatório. Deve ser usado junto com o `start_date`.\n"
        required: false
        type: "string"
        format: "date-time"
      - name: "event_type"
        in: "query"
        description: "Um id de tipo de evento.\n"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        400:
          description: "Erro"
      x-swagger-router-controller: "Event"
  /participant:
    post:
      tags:
      - "participant"
      summary: "Cadastrar um novo participante no evento"
      description: ""
      operationId: "addParticipant"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "registrationDate deve ser gravado com a data,hora do servidor"
        required: true
        schema:
            type: object
            properties:
              userId:
                type: "integer"
                format: "int64"
              eventoId:
                type: "integer"
                format: "int64"
      responses:
        200:
          description: "Sucesso"
        400:
          description: "Erro"
      x-swagger-router-controller: "Participant"
  /participant/{participantId}:
    get:
      tags:
      - "participant"
      summary: "Enconte um usuario pelo seu ID"
      description: ""
      operationId: "getParticipantById"
      produces:
      - "application/json"
      parameters:
      - name: "participantId"
        in: "path"
        description: "Id do participante para consulta-lo"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
          schema:
              type: object
              properties:
                id:
                  type: "integer"
                  format: "int64"
                userId:
                  type: "integer"
                  format: "int64"
                eventoId:
                  type: "integer"
                  format: "int64"
                registrationDate:
                  type: "string"
                  format: date-time
        400:
          description: "Erro"
      x-swagger-router-controller: "Participant"
    delete:
      tags:
      - "participant"
      summary: "Deletar um participante"
      description: ""
      operationId: "deleteParticipant"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "participantId"
        in: "path"
        description: "Id do participante que deseja deletar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
        400:
          description: "Erro"
      x-swagger-router-controller: "Participant"
  /mensagem:
    post:
      tags:
      - "mensagem"
      summary: "Adicione uma nova Mensagem"
      description: ""
      operationId: "addMensagem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Necessário um objeto Evento, a data da mensagem deve ser gravada com base na data e hora do servidor"
        required: true
        schema:
            type: object
            properties:
              message:
                type: string
              participantId:
                type: "integer"
                format: "int64"
      responses:
        200:
          description: "Sucesso"
        400:
          description: "Erro"
      x-swagger-router-controller: "Mensagem"
    put:
      tags:
      - "mensagem"
      summary: "Atualizar uma mensagem"
      description: "A data da mensagem deve ser gravada com base na data e hora do servidor"
      operationId: "updateMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
            type: object
            properties:
              id:
                type: "integer"
                format: "int64"
              message:
                type: string
      responses:
        200:
          description: "Sucesso"
          schema:
            type: object
            properties:
              id:
                type: "integer"
                format: "int64"
              messageDate:
                type: string
                format: 'date-time'
              message:
                type: string
              participantId:
                type: "integer"
                format: "int64"
        400:
          description: "Erro"
      x-swagger-router-controller: "Mensagem"
  /mensagem/evento/{eventId}:
    get:
      tags:
      - "mensagem"
      summary: "Retorna todas as mensagens do evento"
      description: "Retorna todas as mensagens do id do evento enviado"
      operationId: "getMensagemById"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "Id do Evento que quer retorno"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
          schema:
            type: "array"
            items:
              type: object
              properties:
                id:
                  type: "integer"
                  format: "int64"
                userId:
                  type: "integer"
                  format: "int64"
                username:
                  type: string
                messageDate:
                  type: string
                  format: 'date-time'
                message:
                  type: string
        400:
          description: "Erro"
      x-swagger-router-controller: "Mensagem"
  /mensagem/{msgId}:
    delete:
      tags:
      - "mensagem"
      summary: "Deletar Alguma mensagem"
      description: ""
      operationId: "deleteMensagem"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "msgId"
        in: "path"
        description: "Id da mensagem que deseja deletar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
        400:
          description: "Erro"
      x-swagger-router-controller: "Mensagem"
  /tipoEvento:
    get:
      tags:
      - "eventtype"
      summary: "Listar todos os Tipo de Eventos"
      description: ""
      operationId: "getTipoEvento"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventType"
        400:
          description: "Erro"
      x-swagger-router-controller: "Eventtype"
definitions:
  Message:
    type: "object"
    required:
    - "participant"
    - "messageDate"
    - "message"
    properties:
      Id:
        type: "integer"
        format: "int64"
      participant:
        $ref: "#/definitions/Participant"
      messageDate:
        type: "string"
        format: "date-time"
      message:
        type: "string"
    example:
      date: "2019-11-07T18:46:29.648Z"
      Id: 0
      message: "message"
      participant:
        registrationDate: "2019-11-07T18:46:29.648Z"
        event:
          endDate: "2019-11-07T18:46:29.648Z"
          city: "city"
          street: "street"
          description: "description"
          id: 0
          neighborhood: "neighborhood"
          eventType:
            name: "name"
            id: 6
          title: "Corrida das 18h"
          user:
            password: "password"
            birthdate: "2000-01-23"
            sex: "sex"
            id: 0
            email: "email"
            username: "username"
          startDate: "2019-11-07T18:46:29.648Z"
          referencePoint: "referencePoint"
          status: true
        user:
          password: "password"
          birthdate: "2000-01-23"
          sex: "sex"
          id: 0
          email: "email"
          username: "username"
  login:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  Participant:
    type: "object"
    required:
    - "event"
    - "user"
    - "registrationDate"
    properties:
      id:
        type: "integer"
        format: "int64"
      event:
        $ref: "#/definitions/Event"
      user:
        $ref: "#/definitions/User"
      registrationDate:
        type: "string"
        format: "date-time"
    xml:
      name: "Participant"
    example:
      registrationDate: "2019-11-07T18:46:29.648Z"
      event:
        endDate: "2019-11-07T18:46:29.648Z"
        city: "city"
        street: "street"
        description: "description"
        id: 0
        neighborhood: "neighborhood"
        eventType:
          name: "name"
          id: 6
        title: "Corrida das 18h"
        user:
          password: "password"
          birthdate: "2000-01-23"
          sex: "sex"
          id: 0
          email: "email"
          username: "username"
        startDate: "2019-11-07T18:46:29.648Z"
        referencePoint: "referencePoint"
        status: true
      user:
        password: "password"
        birthdate: "2000-01-23"
        sex: "sex"
        id: 0
        email: "email"
        username: "username"
  EventType:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "EventType"
    example:
      name: "name"
      id: 6
  User:
    type: "object"
    required:
    - "email"
    - "password"
    - "username"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      birthdate:
        type: "string"
        format: "date-time"
      sex:
        type: "string"
    example:
      password: "password"
      sex: "sex"
      id: 0
      birthdate: "2019-11-07T12:00:00.000Z"
      email: "email"
      username: "username"
  Event:
    type: "object"
    required:
    - "city"
    - "endDate"
    - "eventType"
    - "neighborhood"
    - "startDate"
    - "street"
    - "title"
    - "user"
    properties:
      participant:
        type: "array"
        items:
          type: object
          properties:
            id:
              type: "integer"
              format: "int64"
            username:
              type: string
            registrationDate:
              type: string
              format: date-time
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Corrida das 18h"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      street:
        type: "string"
      neighborhood:
        type: "string"
      city:
        type: "string"
      referencePoint:
        type: "string"
      description:
        type: "string"
      eventType:
        $ref: "#/definitions/EventType"
      user:
        $ref: "#/definitions/User"
      status:
        type: "boolean"
    example:
      participant:
        [{
          id: 0,
          username: "nome",
          registrationDate: "2019-11-07T18:46:29.648Z"
        }
          ]
      endDate: "2019-11-07T18:46:29.648Z"
      city: "city"
      street: "street"
      description: "description"
      id: 0
      neighborhood: "neighborhood"
      eventType:
        name: "name"
        id: 6
      title: "Corrida das 18h"
      user:
        birthdate: "2000-01-23"
        sex: "sex"
        id: 0
        email: "email"
        username: "username"
      startDate: "2019-11-07T18:46:29.648Z"
      referencePoint: "referencePoint"
      status: true
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"